{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u5230Chay\u7684\u4e2a\u4eba\u7f51\u7ad9 \u00b6 \u4ee5\u4e0b\u4e3a\u7cbe\u9009\u5185\u5bb9 \u5173\u4e8e\u6211","title":"\u4e3b\u9875"},{"location":"#chay","text":"\u4ee5\u4e0b\u4e3a\u7cbe\u9009\u5185\u5bb9 \u5173\u4e8e\u6211","title":"\u6b22\u8fce\u6765\u5230Chay\u7684\u4e2a\u4eba\u7f51\u7ad9"},{"location":"about/","text":"\u5173\u4e8e\u6211 \u00b6 \u672c\u79d1\u751f\uff0c\u5c31\u8bfb\u4e8e\u53a6\u95e8\u5927\u5b66\u4fe1\u606f\u5b66\u9662 \u8054\u7cfb\u65b9\u5f0f \u00b6 canyi.liu@foxmail.com 3\u65e5\u5185\u56de\u590d \u7248\u6743\u4fe1\u606f \u00b6 \u5185\u5bb9\u539f\u521b \u590d\u5236\u8f6c\u8f7d\u8bf7\u6807\u6ce8\u6765\u6e90 \u9875\u9762\u57fa\u4e8e Material for MkDocs \u81ea\u5b9a\u4e49\u4fee\u6539","title":"\u5173\u4e8e"},{"location":"about/#_1","text":"\u672c\u79d1\u751f\uff0c\u5c31\u8bfb\u4e8e\u53a6\u95e8\u5927\u5b66\u4fe1\u606f\u5b66\u9662","title":"\u5173\u4e8e\u6211"},{"location":"about/#_2","text":"canyi.liu@foxmail.com 3\u65e5\u5185\u56de\u590d","title":"\u8054\u7cfb\u65b9\u5f0f"},{"location":"about/#_3","text":"\u5185\u5bb9\u539f\u521b \u590d\u5236\u8f6c\u8f7d\u8bf7\u6807\u6ce8\u6765\u6e90 \u9875\u9762\u57fa\u4e8e Material for MkDocs \u81ea\u5b9a\u4e49\u4fee\u6539","title":"\u7248\u6743\u4fe1\u606f"},{"location":"conception/","text":"\u6682\u65e0","title":"\u7cbe\u9009"},{"location":"experiment/","text":"\u6682\u65e0","title":"\u7cbe\u9009"},{"location":"learning/","text":"\u6682\u65e0","title":"\u7cbe\u9009"},{"location":"sudoku/","text":"\u6700\u8fd1\u6c89\u8ff7\u6570\u72ec\uff0c\u4e8e\u662f\u5236\u4f5c\u4e86\u6c42\u89e3\u6570\u72ec\u7684\u5c0f\u7a0b\u5e8f \u76ee\u524d\u8fd8\u4ec5\u662fc++\u7248\u672c\u7684\u7ec8\u7aef\u7a0b\u5e8f #include <iostream> using namespace std; int mp[9][9]; void input() { cout << \"\u8f93\u5165\u6570\u72ec\uff0c \u7a7a\u683c\u75280\uff1a\" << endl; char c; for (int i = 0; i < 9; i++) { for (int j = 0; j < 9; j++) { cin >> c; mp[i][j] = c - '0'; } getchar(); } } bool check(int x, int y, int num) { // \u5217 for (int i = 0; i < 9; i++) { if (mp[i][y] == num) return false; } // \u884c for (int j = 0; j < 9; j++) { if (mp[x][j] == num) return false; } // \u4e5d\u5bab\u683c int gx = x / 3 * 3, gy = y / 3 * 3; // \u8fd9\u91cc\u9700\u8981/3\u53c8*3 for (int i = gx; i < gx + 3; i++) { for (int j = gy; j < gy + 3; j++) { if (mp[i][j] == num) return false; } } return true; } bool dfs(int u) { if (u == 81){ return true; } int x = u / 9, y = u % 9; if (mp[x][y]) return dfs(u+1); for (int k = 1; k <= 9; k++) { if (check(x, y, k)) { mp[x][y] = k; if (dfs(u+1)) return true; mp[x][y] = 0; } } return false; } void output() { for (int i = 0; i < 9; i++) { // \u753b\u683c\u5b50 if (i % 3 == 0) { for(int j = 0; j < 13; j++) cout << '-'; cout << endl; } for (int j = 0; j < 9; j++) { // \u753b\u683c\u5b50 if (j % 3 == 0) { cout << '|'; } cout << mp[i][j]; } cout << '|' << endl; } // \u753b\u683c\u5b50 for(int j = 0; j < 13; j++) cout << '-'; cout << endl; } int main() { // \u8bfb\u5165 input(); // \u8fd0\u7b97 dfs(0); // \u8f93\u51fa output(); }","title":"\u6570\u72ec"}]}